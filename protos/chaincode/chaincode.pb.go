// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chaincode.proto

/*
Package chaincode is a generated protocol buffer package.

It is generated from these files:
	chaincode.proto
	chaincode_shim.proto

It has these top-level messages:
	ChaincodeID
	ChaincodeInput
	ChaincodeSpec
	ChaincodeDeploymentSpec
	ChaincodeInvocationSpec
	Response
	ChaincodeEvent
	ChaincodeMessage
	PutStateInfo
*/
package chaincode

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Confidentiality Levels
type ConfidentialityLevel int32

const (
	ConfidentialityLevel_PUBLIC       ConfidentialityLevel = 0
	ConfidentialityLevel_CONFIDENTIAL ConfidentialityLevel = 1
)

var ConfidentialityLevel_name = map[int32]string{
	0: "PUBLIC",
	1: "CONFIDENTIAL",
}
var ConfidentialityLevel_value = map[string]int32{
	"PUBLIC":       0,
	"CONFIDENTIAL": 1,
}

func (x ConfidentialityLevel) String() string {
	return proto.EnumName(ConfidentialityLevel_name, int32(x))
}
func (ConfidentialityLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ChaincodeSpec_Type int32

const (
	ChaincodeSpec_UNDEFINED ChaincodeSpec_Type = 0
	ChaincodeSpec_GOLANG    ChaincodeSpec_Type = 1
	ChaincodeSpec_NODE      ChaincodeSpec_Type = 2
	ChaincodeSpec_CAR       ChaincodeSpec_Type = 3
	ChaincodeSpec_JAVA      ChaincodeSpec_Type = 4
)

var ChaincodeSpec_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "GOLANG",
	2: "NODE",
	3: "CAR",
	4: "JAVA",
}
var ChaincodeSpec_Type_value = map[string]int32{
	"UNDEFINED": 0,
	"GOLANG":    1,
	"NODE":      2,
	"CAR":       3,
	"JAVA":      4,
}

func (x ChaincodeSpec_Type) String() string {
	return proto.EnumName(ChaincodeSpec_Type_name, int32(x))
}
func (ChaincodeSpec_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type ChaincodeDeploymentSpec_ExecutionEnvironment int32

const (
	ChaincodeDeploymentSpec_DOCKER ChaincodeDeploymentSpec_ExecutionEnvironment = 0
	ChaincodeDeploymentSpec_SYSTEM ChaincodeDeploymentSpec_ExecutionEnvironment = 1
)

var ChaincodeDeploymentSpec_ExecutionEnvironment_name = map[int32]string{
	0: "DOCKER",
	1: "SYSTEM",
}
var ChaincodeDeploymentSpec_ExecutionEnvironment_value = map[string]int32{
	"DOCKER": 0,
	"SYSTEM": 1,
}

func (x ChaincodeDeploymentSpec_ExecutionEnvironment) String() string {
	return proto.EnumName(ChaincodeDeploymentSpec_ExecutionEnvironment_name, int32(x))
}
func (ChaincodeDeploymentSpec_ExecutionEnvironment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

// ChaincodeID contains the path as specified by the deploy transaction
// that created it as well as the hashCode that is generated by the
// system for the path. From the user level (ie, CLI, REST API and so on)
// deploy transaction is expected to provide the path and other requests
// are expected to provide the hashCode. The other value will be ignored.
// Internally, the structure could contain both values. For instance, the
// hashCode will be set when first generated using the path
type ChaincodeID struct {
	// deploy transaction will use the path
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// all other requests will use the name (really a hashcode) generated by
	// the deploy transaction
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// user friendly version name for the chaincode
	Version string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *ChaincodeID) Reset()                    { *m = ChaincodeID{} }
func (m *ChaincodeID) String() string            { return proto.CompactTextString(m) }
func (*ChaincodeID) ProtoMessage()               {}
func (*ChaincodeID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChaincodeID) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ChaincodeID) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChaincodeID) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Carries the chaincode function and its arguments.
// UnmarshalJSON in transaction.go converts the string-based REST/JSON input to
// the []byte-based current ChaincodeInput structure.
type ChaincodeInput struct {
	Args [][]byte `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
}

func (m *ChaincodeInput) Reset()                    { *m = ChaincodeInput{} }
func (m *ChaincodeInput) String() string            { return proto.CompactTextString(m) }
func (*ChaincodeInput) ProtoMessage()               {}
func (*ChaincodeInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ChaincodeInput) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

// Carries the chaincode specification. This is the actual metadata required for
// defining a chaincode.
type ChaincodeSpec struct {
	Type        ChaincodeSpec_Type `protobuf:"varint,1,opt,name=type,enum=chaincode.ChaincodeSpec_Type" json:"type,omitempty"`
	ChaincodeId *ChaincodeID       `protobuf:"bytes,2,opt,name=chaincode_id,json=chaincodeId" json:"chaincode_id,omitempty"`
	Input       *ChaincodeInput    `protobuf:"bytes,3,opt,name=input" json:"input,omitempty"`
	Timeout     int32              `protobuf:"varint,4,opt,name=timeout" json:"timeout,omitempty"`
}

func (m *ChaincodeSpec) Reset()                    { *m = ChaincodeSpec{} }
func (m *ChaincodeSpec) String() string            { return proto.CompactTextString(m) }
func (*ChaincodeSpec) ProtoMessage()               {}
func (*ChaincodeSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChaincodeSpec) GetType() ChaincodeSpec_Type {
	if m != nil {
		return m.Type
	}
	return ChaincodeSpec_UNDEFINED
}

func (m *ChaincodeSpec) GetChaincodeId() *ChaincodeID {
	if m != nil {
		return m.ChaincodeId
	}
	return nil
}

func (m *ChaincodeSpec) GetInput() *ChaincodeInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *ChaincodeSpec) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// Specify the deployment of a chaincode.
// TODO: Define `codePackage`.
type ChaincodeDeploymentSpec struct {
	ChaincodeSpec *ChaincodeSpec `protobuf:"bytes,1,opt,name=chaincode_spec,json=chaincodeSpec" json:"chaincode_spec,omitempty"`
	// Controls when the chaincode becomes executable.
	// google.protobuf.Timestamp effective_date = 2;
	CodePackage []byte                                       `protobuf:"bytes,3,opt,name=code_package,json=codePackage,proto3" json:"code_package,omitempty"`
	ExecEnv     ChaincodeDeploymentSpec_ExecutionEnvironment `protobuf:"varint,4,opt,name=exec_env,json=execEnv,enum=chaincode.ChaincodeDeploymentSpec_ExecutionEnvironment" json:"exec_env,omitempty"`
}

func (m *ChaincodeDeploymentSpec) Reset()                    { *m = ChaincodeDeploymentSpec{} }
func (m *ChaincodeDeploymentSpec) String() string            { return proto.CompactTextString(m) }
func (*ChaincodeDeploymentSpec) ProtoMessage()               {}
func (*ChaincodeDeploymentSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ChaincodeDeploymentSpec) GetChaincodeSpec() *ChaincodeSpec {
	if m != nil {
		return m.ChaincodeSpec
	}
	return nil
}

func (m *ChaincodeDeploymentSpec) GetCodePackage() []byte {
	if m != nil {
		return m.CodePackage
	}
	return nil
}

func (m *ChaincodeDeploymentSpec) GetExecEnv() ChaincodeDeploymentSpec_ExecutionEnvironment {
	if m != nil {
		return m.ExecEnv
	}
	return ChaincodeDeploymentSpec_DOCKER
}

// Carries the chaincode function and its arguments.
type ChaincodeInvocationSpec struct {
	ChaincodeSpec *ChaincodeSpec `protobuf:"bytes,1,opt,name=chaincode_spec,json=chaincodeSpec" json:"chaincode_spec,omitempty"`
	// This field can contain a user-specified ID generation algorithm
	// If supplied, this will be used to generate a ID
	// If not supplied (left empty), sha256base64 will be used
	// The algorithm consists of two parts:
	//  1, a hash function
	//  2, a decoding used to decode user (string) input to bytes
	// Currently, SHA256 with BASE64 is supported (e.g. idGenerationAlg='sha256base64')
	IdGenerationAlg string `protobuf:"bytes,2,opt,name=id_generation_alg,json=idGenerationAlg" json:"id_generation_alg,omitempty"`
}

func (m *ChaincodeInvocationSpec) Reset()                    { *m = ChaincodeInvocationSpec{} }
func (m *ChaincodeInvocationSpec) String() string            { return proto.CompactTextString(m) }
func (*ChaincodeInvocationSpec) ProtoMessage()               {}
func (*ChaincodeInvocationSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ChaincodeInvocationSpec) GetChaincodeSpec() *ChaincodeSpec {
	if m != nil {
		return m.ChaincodeSpec
	}
	return nil
}

func (m *ChaincodeInvocationSpec) GetIdGenerationAlg() string {
	if m != nil {
		return m.IdGenerationAlg
	}
	return ""
}

// other proto file
type Response struct {
	// A status code that should follow the HTTP status codes.
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// A message associated with the response code.
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// A payload that can be used to include metadata with this response.
	Payload []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Response) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ChaincodeEvent struct {
	ChaincodeId string `protobuf:"bytes,1,opt,name=chaincode_id,json=chaincodeId" json:"chaincode_id,omitempty"`
	TxId        string `protobuf:"bytes,2,opt,name=tx_id,json=txId" json:"tx_id,omitempty"`
	EventName   string `protobuf:"bytes,3,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	Payload     []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *ChaincodeEvent) Reset()                    { *m = ChaincodeEvent{} }
func (m *ChaincodeEvent) String() string            { return proto.CompactTextString(m) }
func (*ChaincodeEvent) ProtoMessage()               {}
func (*ChaincodeEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ChaincodeEvent) GetChaincodeId() string {
	if m != nil {
		return m.ChaincodeId
	}
	return ""
}

func (m *ChaincodeEvent) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *ChaincodeEvent) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *ChaincodeEvent) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*ChaincodeID)(nil), "chaincode.ChaincodeID")
	proto.RegisterType((*ChaincodeInput)(nil), "chaincode.ChaincodeInput")
	proto.RegisterType((*ChaincodeSpec)(nil), "chaincode.ChaincodeSpec")
	proto.RegisterType((*ChaincodeDeploymentSpec)(nil), "chaincode.ChaincodeDeploymentSpec")
	proto.RegisterType((*ChaincodeInvocationSpec)(nil), "chaincode.ChaincodeInvocationSpec")
	proto.RegisterType((*Response)(nil), "chaincode.Response")
	proto.RegisterType((*ChaincodeEvent)(nil), "chaincode.ChaincodeEvent")
	proto.RegisterEnum("chaincode.ConfidentialityLevel", ConfidentialityLevel_name, ConfidentialityLevel_value)
	proto.RegisterEnum("chaincode.ChaincodeSpec_Type", ChaincodeSpec_Type_name, ChaincodeSpec_Type_value)
	proto.RegisterEnum("chaincode.ChaincodeDeploymentSpec_ExecutionEnvironment", ChaincodeDeploymentSpec_ExecutionEnvironment_name, ChaincodeDeploymentSpec_ExecutionEnvironment_value)
}

func init() { proto.RegisterFile("chaincode.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x6f, 0xda, 0x4c,
	0x10, 0x8d, 0xc1, 0x24, 0x61, 0x20, 0xc4, 0xdf, 0x7e, 0x51, 0xea, 0x1e, 0x22, 0x25, 0x56, 0x0f,
	0x51, 0x0e, 0x54, 0xa5, 0x95, 0xaa, 0x5e, 0x5a, 0x51, 0xec, 0x44, 0x6e, 0xa9, 0x89, 0x36, 0x3f,
	0xa4, 0x9e, 0xd0, 0xd6, 0x9e, 0x92, 0x55, 0x61, 0xd7, 0xc2, 0x8b, 0x05, 0xc7, 0x5c, 0xaa, 0xfe,
	0xd9, 0xd5, 0xae, 0x31, 0x84, 0x8a, 0xde, 0x7a, 0xdb, 0x79, 0xfb, 0x66, 0xf6, 0xcd, 0xf3, 0x8c,
	0xe1, 0x30, 0x7e, 0x60, 0x5c, 0xc4, 0x32, 0xc1, 0x76, 0x3a, 0x95, 0x4a, 0x92, 0xfa, 0x0a, 0xf0,
	0x06, 0xd0, 0xe8, 0x95, 0x41, 0xe8, 0x13, 0x02, 0x76, 0xca, 0xd4, 0x83, 0x6b, 0x9d, 0x5a, 0xe7,
	0x75, 0x6a, 0xce, 0x1a, 0x13, 0x6c, 0x82, 0x6e, 0xa5, 0xc0, 0xf4, 0x99, 0xb8, 0xb0, 0x97, 0xe3,
	0x34, 0xe3, 0x52, 0xb8, 0x55, 0x03, 0x97, 0xa1, 0xf7, 0x02, 0x5a, 0xeb, 0x82, 0x22, 0x9d, 0x29,
	0x9d, 0xcf, 0xa6, 0xa3, 0xcc, 0xb5, 0x4e, 0xab, 0xe7, 0x4d, 0x6a, 0xce, 0xde, 0xaf, 0x0a, 0x1c,
	0xac, 0x68, 0x37, 0x29, 0xc6, 0xe4, 0x15, 0xd8, 0x6a, 0x91, 0xa2, 0x79, 0xb9, 0xd5, 0x39, 0x69,
	0xaf, 0x35, 0x6f, 0xf0, 0xda, 0xb7, 0x8b, 0x14, 0xa9, 0xa1, 0x92, 0x77, 0xd0, 0x5c, 0xb1, 0x86,
	0x3c, 0x31, 0x02, 0x1b, 0x9d, 0xe3, 0x6d, 0xa9, 0xa1, 0x4f, 0x1b, 0x2b, 0x38, 0x4c, 0xc8, 0x4b,
	0xa8, 0x71, 0x2d, 0xce, 0xa8, 0x6f, 0x74, 0x9e, 0x6f, 0xcd, 0xd1, 0x04, 0x5a, 0xf0, 0x74, 0xc3,
	0x8a, 0x4f, 0x50, 0xce, 0x94, 0x6b, 0x9f, 0x5a, 0xe7, 0x35, 0x5a, 0x86, 0xde, 0x7b, 0xb0, 0xb5,
	0x26, 0x72, 0x00, 0xf5, 0xbb, 0xc8, 0x0f, 0x2e, 0xc3, 0x28, 0xf0, 0x9d, 0x1d, 0x02, 0xb0, 0x7b,
	0x35, 0xe8, 0x77, 0xa3, 0x2b, 0xc7, 0x22, 0xfb, 0x60, 0x47, 0x03, 0x3f, 0x70, 0x2a, 0x64, 0x0f,
	0xaa, 0xbd, 0x2e, 0x75, 0xaa, 0x1a, 0xfa, 0xd4, 0xbd, 0xef, 0x3a, 0xb6, 0xf7, 0x58, 0x81, 0x67,
	0xab, 0x37, 0x7d, 0x4c, 0xc7, 0x72, 0x31, 0x41, 0xa1, 0x8c, 0x29, 0x1f, 0xa0, 0xb5, 0xee, 0x30,
	0x4b, 0x31, 0x36, 0xf6, 0x34, 0x3a, 0xee, 0xdf, 0xec, 0xa1, 0x07, 0xf1, 0x86, 0xab, 0x67, 0xd0,
	0x34, 0xb9, 0x29, 0x8b, 0x7f, 0xb0, 0x11, 0x9a, 0x76, 0x9b, 0xb4, 0xa1, 0xb1, 0xeb, 0x02, 0x22,
	0x14, 0xf6, 0x71, 0x8e, 0xf1, 0x10, 0x45, 0x6e, 0x5a, 0x6b, 0x75, 0xde, 0x6e, 0xab, 0xbe, 0xa9,
	0xac, 0x1d, 0xcc, 0x31, 0x9e, 0x29, 0x2e, 0x45, 0x20, 0x72, 0x3e, 0x95, 0x42, 0x5f, 0xd0, 0x3d,
	0x5d, 0x28, 0x10, 0xb9, 0xd7, 0x86, 0xa3, 0x6d, 0x04, 0x6d, 0x8a, 0x3f, 0xe8, 0x7d, 0x0e, 0x68,
	0x61, 0xd0, 0xcd, 0xd7, 0x9b, 0xdb, 0xe0, 0x8b, 0x63, 0x79, 0x3f, 0xad, 0x27, 0x1e, 0x84, 0x22,
	0x97, 0x31, 0xd3, 0xa9, 0xff, 0xc6, 0x83, 0x0b, 0xf8, 0x8f, 0x27, 0xc3, 0x11, 0x0a, 0x9c, 0x9a,
	0xaa, 0x43, 0x36, 0x1e, 0x2d, 0x87, 0xf9, 0x90, 0x27, 0x57, 0x2b, 0xbc, 0x3b, 0x1e, 0x79, 0xf7,
	0xb0, 0x4f, 0x31, 0x4b, 0xa5, 0xc8, 0x90, 0x1c, 0xc3, 0x6e, 0xa6, 0x98, 0x9a, 0x65, 0xe6, 0xc1,
	0x1a, 0x5d, 0x46, 0x7a, 0x14, 0x26, 0x98, 0x65, 0xda, 0xce, 0xa2, 0x4a, 0x19, 0xea, 0x9b, 0x94,
	0x2d, 0xc6, 0x92, 0x25, 0x4b, 0xa3, 0xcb, 0xd0, 0x7b, 0xb4, 0x9e, 0xac, 0x45, 0x90, 0x6b, 0x2f,
	0xce, 0xfe, 0x98, 0xde, 0x62, 0xe5, 0x36, 0xa6, 0xf4, 0x7f, 0xa8, 0xa9, 0x79, 0x39, 0xd9, 0x75,
	0x6a, 0xab, 0x79, 0x98, 0x90, 0x13, 0x00, 0xd4, 0x05, 0x86, 0x66, 0x29, 0x8b, 0xed, 0xab, 0x1b,
	0x24, 0x5a, 0x6e, 0x66, 0xa9, 0xc1, 0xde, 0xd0, 0x70, 0xf1, 0x06, 0x8e, 0x7a, 0x52, 0x7c, 0xe7,
	0x09, 0x0a, 0xc5, 0xd9, 0x98, 0xab, 0x45, 0x1f, 0x73, 0x1c, 0xeb, 0x0f, 0x71, 0x7d, 0xf7, 0xb1,
	0x1f, 0xf6, 0x9c, 0x1d, 0xe2, 0x40, 0xb3, 0x37, 0x88, 0x2e, 0x43, 0x3f, 0x88, 0x6e, 0xc3, 0x6e,
	0xdf, 0xb1, 0xbe, 0xed, 0x9a, 0x5f, 0xc6, 0xeb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x42, 0x7a,
	0x67, 0x2d, 0x45, 0x04, 0x00, 0x00,
}
